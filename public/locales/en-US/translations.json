{
  "main": {
    "paper": "Paper Trading",
    "production": "Production",
    "trading": "Trading Terminal",
    "market": "Market Data",
    "strategyEditor": "Strategy Editor"
  },
  "auth": {
    "enterPsw": "Enter your password to unlock",
    "password": "Password",
    "confirmPsw": "Confirm password",
    "selectMode": "Select trading mode",
    "resetMsg": "Alternatively, clear your credentials and stored data to set a new password",
    "resetBtn": "Clear Data & Reset",
    "unlockBtn": "Unlock",
    "initMsg": "Create a password to encrypt your API credentials & strategies. All data is stored locally, and your password is hashed",
    "saveCredentsBtn": "Save Credentials"
  },
  "activeAlgoOrdersModal": {
    "title": "Active Orders",
    "cancellBtn": "Cancel All",
    "resumeBtn": "Resume",
    "selectAllBtn": "Select All"
  },
  "AOPauseModal": {
    "title": "Algo Orders Pause",
    "text1": "Closing the application while algo orders are active will require you to resume/cancel the algo orders when you relaunch the Honey Framework application.",
    "text2": "When you restart the Honey Framework application, you will be prompted to select between the currently active algo orders to which two of the given options can be applied:",
    "text3": "1. Resume: The atomic orders placed by the selected algo orders (if active) will be cancelled, and the algo orders will resume placing orders for the remaining amounts. The unselected algo orders will not be resumed and will be lost in perpetuity.",
    "text4": "2. Cancel All: All atomic orders placed by the algo orders (if active) will be cancelled and no algo orders will be resumed.",
    "text5": "Note: Atomic orders will remain active if DMS option is disabled."
  },
  "AOTableModal": {
    "title": "Algo. Orders",
    "titleFull": "Algorithmic Orders",
    "noOrders": "No active algorithmic orders"
  },
  "appSettings": {
    "title": "Settings",
    "generalTab": "General",
    "tradingModeTab": "Trading Mode",
    "apiKeys": "API keys",
    "productionKey": "Production API Key",
    "paperKey": "Paper Trading API Key",
    "apiNotValid": "Invalid API Key entered",
    "apiNotConfigured": "Not Configured",
    "apiSubmit": "Submit",
    "autologin": "Auto-login in development mode",
    "apiKey": "API Key",
    "apiSecret": "API Secret",
    "deadManCheckbox": "Dead Man Switch",
    "deadManText1": "Enabling the Dead Man switch will automatically cancel all active orders when the application closes.",
    "deadManText2": "Algorithmic orders are cancelled on application close; without the Dead Man switch, any atomic orders created by an AO will remain open, and state may be lost when the application is started up again.",
    "deadManWarning": "Disabling this should be done with caution!",
    "usageReportingCheckbox": "Usage reporting",
    "showPauseInfoCheckbox": "Show Algo Orders pause info",
    "showPauseInfoText": "If checked, the modal with explanations will be displayed when you close the app with active Algo Orders.",
    "rebootCheckbox": "Reboot automatically on bad connection",
    "rebootText": " When you experience a poor internet connection, the modal window that notifies you of this will not be displayed and the app will restart automatically.",
    "howToCreate": "How to Create a Key?",
    "learnMore": "Learn More",
    "validating": "Validating...",
    "configured": "Configured",
    "productionTradingCheckbox": "Production Trading",
    "productionTradingText": "Live trading with real money.",
    "paperTradingText": "Practice trading without risking real money."
  },
  "atomicOrdersTableModal": {
    "title": "Atomic Orders",
    "noOrders": "No active atomic orders"
  },
  "badConnectionModal": {
    "title": "Connection issue",
    "text1": "We've noticed several internet connection issues. It's required to reboot the app to continue normal operation.",
    "text2": "Please make sure you have stable and good internet connection.",
    "text3": "The Honey Framework will reboot after you press 'Okay'.",
    "text4": "The app will reboot automatically in {{countdown}} seconds.",
    "checkbox": "Reboot automatically"
  },
  "balancesTableModal": {
    "title": "Balances",
    "hideZeroCheckbox": "Hide Zero Balances",
    "noBalances": "No balances available"
  },
  "bestExperienceMessageModal": {
    "title": "Best experience warning",
    "text1": "Web verison of Honey Framework designed for desktops. For having best experience in using application, we strongly recommend using desktop.",
    "text2": "It's adviced to use this app in a landscape mode.",
    "text3": "Best regards, your Honey Framework&apos;s team!"
  },
  "chartModal": {
    "title": "Chart"
  },
  "layoutSettings": {
    "title": "Layout settings",
    "addComponent": "Add Component",
    "save": "Save",
    "saveAs": "Save As...",
    "labelEmptyError": "Label empty",
    "addLayout": "Add Layout",
    "layoutName": "Layout Name",
    "invalidComponentError": "Invalid Component"
  },
  "notifications": {
    "title": "Notifications",
    "clearAllBtn": "Clear all",
    "noNotifications": "There are no new notifications yet!"
  },
  "tradingModeModal": {
    "title": "Switch Trade Mode",
    "text": "The app will reboot after you press Okay. It's required for switching trading mode. Open algo orders are paused."
  },
  "oldFormatModal": {
    "title": "Layout upgrade",
    "text1": "Since the v3.12.0 update we have reworked the way of how the application layout works.",
    "text2": "From now on, each component, including the Order form and Ticker symbols, is independent and can be added or removed in the layout settings.",
    "text3": "If needed, you can add these components to your custom layout in the layout settings, sorry for the inconvenience."
  },
  "orderBookModal": {
    "title": "Order Book",
    "sumAmountsCheckbox": "Sum Amounts",
    "stackedViewCheckbox": "Stacked View"
  },
  "orderForm": {
    "title": "Execute Order",
    "title2": "Order Form",
    "apiKeyRequired": "API Key Required",
    "apiSecretRequired": "API Secret Required",
    "submitKeys": "Submit {{mode}} api keys",
    "exchangeConnecting": "Connecting to exchange...",
    "help": "HELP:",
    "exchange": "Exchange",
    "margin": "Margin",
    "derivatives": "Derivatives",
    "fokTitle": "Fill or Kill",
    "fokHelp": "An FOK order is a limit order that must fully fill immediately or it is canceled (killed).",
    "iocTitle": "Immediate or Cancel",
    "iocHelp": "An IOC order is a limit order that must fill immediately, with any unfilled portion cancelled.",
    "limitTitle": "Limit",
    "limitHelp": "A Limit order submits a buy or sell order at the specified price. If the price is above or below the current best ask/bid (respectively for buy/sell orders) it will execute immediately as a TAKER order. Otherwise, it will be inserted into the order book and execute as a MAKER order when the market reaches the order's price.\n\nIf the 'hidden' option is enabled, the order will be inserted in the order book but will not be visible to other users, and will execute as a TAKER.\n\nThe OCO (one-cancels-the-other) option may be used to submit a pair of orders; once one of the orders fills, the other is automatically cancelled.\n\nThe 'post-only' option ensures the order is inserted into the order book instead of being immediately filled, and cancels it otherwise.\n\nA Time-In-Force date may be specified, after which the order will be automatically cancelled.",
    "marketTitle": "Market",
    "marketHelp": "A Market order will fill immediately at the current market price.\n\nIf the 'reduce-only' option is specified, the order will be cancelled if it would open or increase the size of an open position.",
    "stopLimitTitle": "Stop Limit",
    "stopLimitHelp": "The Stop-Limit order type differs from the basic Stop order by allowing the specification of an exact price of execution.\n\nOnce the 'stop' price is reached, a 'Limit' order is created at the specified limit price.\n\nIf the 'hidden' option is enabled, the order will be inserted in the order book but will not be visible to other users, and will execute as a TAKER.\n\nIf the 'reduce-only' option is specified, the resulting Limit order will be cancelled if it would open or increase the size of an open position.\n\nA Time-In-Force date may be specified, after which the order will be automatically cancelled.",
    "stopTitle": "Stop",
    "stopHelp": "Stop orders are automatically converted to Market orders once the specified stop price is reached.\n\nFor control over the execution price, use a Stop-Limit order.\n\nIf the 'reduce-only' option is specified, the order will be cancelled if it would open or increase the size of an open position.\n\nA Time-In-Force date may be specified, after which the order will be automatically cancelled.",
    "trailingStopTitle": "Trailing Stop",
    "trailingStopHelp": "Trailing stop orders follow ('trail') the market price up (for sell orders) or down (for buy orders) by the specified trailing distance. If the market price moves against the trailing stop order, it does not move and will execute once the market reaches the order.\n\nIf the 'reduce-only' option is specified, the order will be cancelled if it would open or increase the size of an open position.\n\nA Time-In-Force date may be specified, after which the order will be automatically cancelled.",
    "reduceOnlyCheckbox": "REDUCE-ONLY",
    "reduceOnlyMessage": "Cancels the order if it would increase the size of an open position",
    "hiddenCheckbox": "HIDDEN",
    "hiddenMessage": "This option allows you to place an order into the book but not have it displayed to other traders. Price/time priority is the same as a displayed order, but the hidden order will always pay the \"taker\" fee while those trading against a hidden order will pay the \"maker\" fee",
    "ocoCheckbox": "OCO",
    "ocoMessage": "This option allows you to place a pair of orders stipulating that if one order is executed fully or partially, then the other order is automatically canceled. A one-cancels-the-other order combines a stop order with a limit order. This option allows you to place both take profit and stop loss targets for your position (only for limit orders)",
    "ocoStop": "OCO Stop",
    "tifCheckbox": "TIF",
    "tifMessage": "Time-In-Force: specify datetime for automatic order cancellation",
    "tifDate": "TIF Date",
    "postOnlyCheckbox": "POST-ONLY",
    "postOnlyMessage": "\"Post Only\" limit orders are orders that allow you to be sure to always pay the maker fee. When placed, a \"Post Only\" limit order is either inserted into the order book or cancelled (only for limit orders)",
    "laverage": "Leverage",
    "stopPrice": "Stop Price",
    "limitPrice": "Limit Price",
    "distance": "Distance"
  },
  "orderHistoryModal": {
    "title": "Order History",
    "noHistory": "Order history is empty"
  },
  "joyride": {
    "trading1": "Customized layouts can be saved here",
    "trading2": "You can find your notifications here",
    "trading3": "If you want to create an order, this menu contains all orders available",
    "trading4": "Here you can find the current version of your app. In case there is an update, there will be an update button",
    "market": "To customize your layout, you can add components to it",
    "strategyEditor1": "Create your own strategies",
    "strategyEditor2": "Or open an existing one",
    "strategyEditor3": "In this section you find the available function declarations to code your own strategies"
  },
  "positionsTableModal": {
    "title": "Positions",
    "noPositions": "No active positions found"
  },
  "table": {
    "name": "Name",
    "context": "Context",
    "created": "Created",
    "symbol": "Symbol",
    "label": "Label",
    "currency": "Currency",
    "total": "Total",
    "available": "Available",
    "pair": "Pair",
    "amount": "Amount",
    "basePrice": "Base Price",
    "liqPrice": "Liq Price",
    "pl": "P/L",
    "plPerc": "P/L %",
    "fundingCost": "Funding Cost",
    "type": "Type",
    "price": "Price",
    "status": "Status"
  },
  "tickersPanel": {
    "title": "Ticker Panel"
  },
  "tradesTableModal": {
    "title": "Trades"
  },
  "tradingStatePanel": {
    "title": "Trading State Panel",
    "filterBy": "Filter by",
    "filteringBy": "Filtering by",
    "positionsTab": "Positions",
    "atomicsTab": "Atomics",
    "algosTab": "Algos",
    "balancesTab": "Balances"
  },
  "ui": {
    "ok": "Okay",
    "cancel": "Cancel",
    "dontShowAgain": "I understood. Don't show me again!",
    "dropdown": "Select an option",
    "backBtn": "Back",
    "closeBtn": "Close",
    "lastBtn": "Finish",
    "nextBtn": "Next",
    "openBtn": "Open the dialog",
    "skipBtn": "Skip",
    "submitBtn": "Submit",
    "updateBtn": "Update",
    "sellBtn": "Sell",
    "buyBtn": "Buy"
  }
}
